//
// @author      OA Wu <oawu.tw@gmail.com>
// @copyright   Copyright (c) 2015 - 2022, Lalilo
// @license     http://opensource.org/licenses/MIT  MIT License
// @link        https://www.ioa.tw/
//

@use "sass:math";
@import "Lib";

@mixin _segmented_before($x, $y) {
  @include transform(translate(calc(4px + (4px + 100%) * $x), calc(4px + (4px + 100%) * $y)));
}

._segmented {
  position: relative;

  width: 100%;
  background-color: var(--ui-color-iOS-quaternaryLabel);
  @include border-radius(6px);
  @include box-shadow(inset 1px 1px 2px rgba(0, 0, 0, .2), inset 0 0 1px rgba(0, 0, 0, .1));

  display: inline-flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  overflow: hidden;
  
  ._item {
    cursor: pointer;
    position: relative;
    display: inline-block;
    cursor: pointer;
    color: var(--ui-color-iOS-label);
    font-size: medium;
    text-align: center;
    @include opacity(.75);
    @extend %-user-select-none;
    @include transition(opacity .3s);

    i {
      display: inline-block;
      padding: 0 6px;
      height: 16px;
      line-height: 16px;
      
      margin-left: 4px;

      font-weight: bold;
      font-size: x-small;
      font-style: normal;
      color: var(--ui-color-iOS-label);
      background-color: var(--ui-color-iOS-tertiaryLabel);
      
      @include opacity(.7);
      @include border-radius(math.div(16px, 2));
      @include transition(opacity .3s, background-color .3s, color .3s);
    }
    &[n]:not([n='']):after{
      content: attr(n);
    }
  } 
  &:before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    background-color: var(--ui-color-iOS-systemBackground);;
    @include border-radius(4px);
    @include box-shadow(0 0 3px rgba(0, 0, 0, .25));
    @include transition(transform .3s, width .3s);
  }
  $h: 40px;
  ._item {
    height: $h;
    line-height: $h;
    i {
      margin-top: math.div(($h - 16px), 2);
    }
  }
  &[n='5'], &[n='6'], &[n='7'], &[n='8'], &[n='10'] {
    &:before {
      height: calc((100% - 4px * 3) / 2);
      line-height: calc((100% - 4px * 3) / 2);
    }
  }
  &[n='9'] {
    &:before {
      height: calc((100% - 4px * 4) / 3);
      line-height: calc((100% - 4px * 4) / 3);
    }
  }


  &[n='10'] {
    flex-wrap: wrap;
    ._item { width: calc(100% / 5); }
    &:before { width: calc((100% - 4px * 6) / 5); }
    &[i='0']:before { @include _segmented_before(0, 0); }
    &[i='1']:before { @include _segmented_before(1, 0); }
    &[i='2']:before { @include _segmented_before(2, 0); }
    &[i='3']:before { @include _segmented_before(3, 0); }
    &[i='4']:before { @include _segmented_before(4, 0); }
    &[i='5']:before { @include _segmented_before(0, 1); }
    &[i='6']:before { @include _segmented_before(1, 1); }
    &[i='7']:before { @include _segmented_before(2, 1); }
    &[i='8']:before { @include _segmented_before(3, 1); }
    &[i='9']:before { @include _segmented_before(4, 1); }
  }
  &[n='9'] {
    flex-wrap: wrap;
    ._item { width: calc(100% / 3); }
    &:before { width: calc((100% - 4px * 4) / 3); }
    &[i='0']:before { @include _segmented_before(0, 0); }
    &[i='1']:before { @include _segmented_before(1, 0); }
    &[i='2']:before { @include _segmented_before(2, 0); }
    &[i='3']:before { @include _segmented_before(0, 1); }
    &[i='4']:before { @include _segmented_before(1, 1); }
    &[i='5']:before { @include _segmented_before(2, 1); }
    &[i='6']:before { @include _segmented_before(0, 2); }
    &[i='7']:before { @include _segmented_before(1, 2); }
    &[i='8']:before { @include _segmented_before(2, 2); }
  }
  &[n='8'] {
    flex-wrap: wrap;
    ._item { width: calc(100% / 4); }
    &:before { width: calc((100% - 4px * 5) / 4); }
    &[i='0']:before { @include _segmented_before(0, 0); }
    &[i='1']:before { @include _segmented_before(1, 0); }
    &[i='2']:before { @include _segmented_before(2, 0); }
    &[i='3']:before { @include _segmented_before(3, 0); }
    &[i='4']:before { @include _segmented_before(0, 1); }
    &[i='5']:before { @include _segmented_before(1, 1); }
    &[i='6']:before { @include _segmented_before(2, 1); }
    &[i='7']:before { @include _segmented_before(3, 1); }
  }
  &[n='7'] {
    flex-wrap: wrap;
    ._item:nth-child(-n + 3) { width: calc(100% / 3); }
    ._item:nth-child(n + 4) { width: calc(100% / 4); }
    &[i='0'], &[i='1'], &[i='2'] {
      &:before {
        width: calc((100% - 4px * 4) / 3);
      }
    }
    &[i='3'], &[i='4'], &[i='5'], &[i='6'] {
      &:before {
        width: calc((100% - 4px * 5) / 4);
      }
    }
    &[i='0']:before { @include _segmented_before(0, 0); }
    &[i='1']:before { @include _segmented_before(1, 0); }
    &[i='2']:before { @include _segmented_before(2, 0); }
    &[i='3']:before { @include _segmented_before(0, 1); }
    &[i='4']:before { @include _segmented_before(1, 1); }
    &[i='5']:before { @include _segmented_before(2, 1); }
    &[i='6']:before { @include _segmented_before(3, 1); }
  }
  &[n='6'] {
    flex-wrap: wrap;
    ._item { width: calc(100% / 3); }
    &:before { width: calc((100% - 4px * 4) / 3); }
    &[i='0']:before { @include _segmented_before(0, 0); }
    &[i='1']:before { @include _segmented_before(1, 0); }
    &[i='2']:before { @include _segmented_before(2, 0); }
    &[i='3']:before { @include _segmented_before(0, 1); }
    &[i='4']:before { @include _segmented_before(1, 1); }
    &[i='5']:before { @include _segmented_before(2, 1); }
  }
  &[n='5'] {
    flex-wrap: wrap;
    ._item:nth-child(-n + 2) { width: calc(100% / 2); }
    ._item:nth-child(n + 3) { width: calc(100% / 3); }
    &[i='0'], &[i='1'] {
      &:before {
        width: calc((100% - 4px * 3) / 2);
      }
    }
    &[i='2'], &[i='3'], &[i='4'] {
      &:before {
        width: calc((100% - 4px * 4) / 3);
      }
    }
    &[i='0']:before { @include _segmented_before(0, 0); }
    &[i='1']:before { @include _segmented_before(1, 0); }
    &[i='2']:before { @include _segmented_before(0, 1); }
    &[i='3']:before { @include _segmented_before(1, 1); }
    &[i='4']:before { @include _segmented_before(2, 1); }
  }

  &[n='1'], &[n='2'], &[n='3'], &[n='4'] {
    &:before {
      height: $h - 4px * 2;
      line-height: $h - 4px * 2;
    }
    
    @for $i from 1 through 4 {
      &[n='#{$i}'] {
        ._item { width: calc(100% / #{$i}); }
        &:before { width: calc((100% - 4px * #{$i + 1}) / #{$i}); }
      }
      &[i='#{$i - 1}'] {
        &:before {
          @include _segmented_before($i - 1, 0);
        }
      }
    }
  }

  @for $i from 1 through 10 {
    &[i='#{$i - 1}'] {
      ._item:nth-child(#{$i}) {
        @include opacity(1);
        
        i {
          @include opacity(1);
        }
      }
    }
  }
}